import "helpers" as helpers; helpers::abs
42
42

import "helpers" as helpers; helpers::abs
-42
42

import "helpers" as helpers; helpers::is_close_to(274.9595015576324)
274.95950155763234
true

import "helpers" as helpers; helpers::bigrams
[5, 7, 3, 0, 1, 5, 6]
[[5, 7], [7, 3], [3, 0], [0, 1], [1, 5], [5, 6]]

import "helpers" as helpers; try helpers::bigrams catch test("^Array .+ has less than 2 elements$")
[5]
true

import "helpers" as helpers; helpers::trigrams
[5, 7, 3, 0, 1, 5, 6]
[[5, 7, 3], [7, 3, 0], [3, 0, 1], [0, 1, 5], [1, 5, 6]]

import "helpers" as helpers; try helpers::trigrams catch test("^Array .+ has less than 3 elements$")
[5, 7]
true

import "helpers" as helpers; helpers::key_by("KEY_" + (. | tostring))
[5, 8, 9, 15]
{"KEY_5": 5, "KEY_8": 8, "KEY_9": 9, "KEY_15": 15}

import "helpers" as helpers; helpers::key_by(.id)
[ { "id": "a", "content": "Frodon" }, { "id": "b", "hobbit": "Bilbo" } ]
{ "a": {"id":"a","content":"Frodon"}, "b": {"id":"b","hobbit":"Bilbo"} }

import "helpers" as helpers; helpers::values
{ "a": 10, "b": 15 }
[10, 15]

import "helpers" as helpers; helpers::find_first(. % 2 == 0)
[ 7, 3, 2, 5, 4 ]
[ 2, 2 ]

import "helpers" as helpers; helpers::find_first(. > 10)
[ 7, 3, 2, 5, 4 ]
null

import "helpers" as helpers; helpers::cyclic_indexes(3)
[5, 7, 3, 0, 1, 5, 6]
[3, 4, 5, 6, 0, 1, 2]

import "helpers" as helpers; helpers::cyclic_indexes(0)
[5, 7, 3, 0, 1, 5, 6]
[0, 1, 2, 3, 4, 5, 6]

import "helpers" as helpers; helpers::cyclic_indexes(3; 2)
[5, 7, 3, 0, 1, 5, 6]
[3, 4, 5, 6, 0, 1, 2]

import "helpers" as helpers; helpers::extract(["a", "c"])
{ "a": 42, "b": "test", "c": ["one", "two"] }
[42, ["one", "two"]]

import "helpers" as helpers; helpers::extract([1, 4, 3])
[5, 7, 3, 0, 1, 5, 6]
[7, 1, 0]

import "helpers" as helpers; helpers::extract(["a", "z"])
{ "a": 42, "b": "test", "c": ["one", "two"] }
[42, null]

import "helpers" as helpers; helpers::extract([1, "a", 3])
[5, 7, 3, 0, 1, 5, 6]
[7, null, 0]
